<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.6.2">Jekyll</generator><link href="/https://victorstepanov.github.io/feed.xml" rel="self" type="application/atom+xml" /><link href="/https://victorstepanov.github.io/" rel="alternate" type="text/html" /><updated>2018-10-07T08:48:18-07:00</updated><id>/https://victorstepanov.github.io/</id><title type="html">Victor Stepanov</title><subtitle>Passionate about making game developers more productive</subtitle><entry><title type="html">Notes for “A Tale of Three Data Schemas”</title><link href="/https://victorstepanov.github.io/tools-tutorial-day-a-tale-of-three-data-schemas" rel="alternate" type="text/html" title="Notes for &quot;A Tale of Three Data Schemas&quot;" /><published>2018-10-06T18:00:00-07:00</published><updated>2018-10-06T18:00:00-07:00</updated><id>/https://victorstepanov.github.io/tools-tutorial-day-a-tale-of-three-data-schemas</id><content type="html" xml:base="/https://victorstepanov.github.io/tools-tutorial-day-a-tale-of-three-data-schemas">&lt;p&gt;GDC 2018, Tools Tutorial Day, Ludovic Chabant, Senior Software Engineer @ Electronic Arts Vancouver shared the know-how of the Frostbite engine team when it comes to designing the game’s data.&lt;/p&gt;

&lt;div style=&quot;background-color:#FFFF94;border-left: 6px solid #ffff48;&quot;&gt;
These are my notes that I wrote down from watching Ludovic's presentation. If you like what you read I hight recommend getting a GDC Vault subscription and watching the full talk &lt;a href=&quot;https://www.gdcvault.com/play/1025284/Tools-Tutorial-Day-A-Tale&quot;&gt;link to talk&lt;/a&gt;.
&lt;/div&gt;
&lt;p style=&quot;margin-bottom: 1em;&quot;&gt;&lt;/p&gt;

&lt;h2 id=&quot;main-takeaway&quot;&gt;Main Takeaway&lt;/h2&gt;
&lt;p&gt;The same data is used in different ways. Optimizing the data’s logical representation for different usage scenarios is key in achieving great performance, efficient use of storage and a sublime user experience. The way that an artist thinks of the data that he or she sees in the editor window might not be the best way to represent the data to load it as fast as possible into the game or might not be the best way to store it on disk. Different data consumption scenarios demand different optimization. Off course maintaining more than one data layout isn’t free but it is worth the investment.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;assets/images/posts/tale_of_3_data_schemas/different_data_schemas_different_problems.png&quot; alt=&quot;different data schemas to solve different problems&quot; /&gt;&lt;/p&gt;
&lt;div align=&quot;center&quot;&gt;
&lt;i&gt;&lt;small&gt;a picture of a side from Ludovic Chabant's GDC 2018 presentation&lt;/small&gt;&lt;/i&gt;
&lt;/div&gt;
&lt;p style=&quot;margin-bottom: 1em;&quot;&gt;&lt;/p&gt;

&lt;h2 id=&quot;data-schema&quot;&gt;Data Schema&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;Definition:&lt;/strong&gt; a data schema is the formal description of the structures a system is working with.&lt;/p&gt;

&lt;h3 id=&quot;examples-of-data-schemas&quot;&gt;Examples of data schemas&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;Public properties of script components in Unity&lt;/li&gt;
  &lt;li&gt;Decorated public properties of a UClass in Unreal Engine&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://knowledge.autodesk.com/support/maya/downloads/caas/CloudHelp/cloudhelp/2018/ENU/Maya-Modeling/files/GUID-6B2E2B87-C990-416F-B772-D0CED101F5E6-htm.html&quot;&gt;Blind Data&lt;/a&gt; in Maya&lt;/li&gt;
  &lt;li&gt;Table columns in a database management system&lt;/li&gt;
  &lt;li&gt;Frostbite DDF (Data Definition Format)&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;basic-idea&quot;&gt;Basic idea&lt;/h3&gt;

&lt;p style=&quot;margin-bottom: 0;&quot;&gt;A data schema is a for communicating about the existence of a &lt;i&gt;type of something&lt;/i&gt; which has:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;properties like
    &lt;ul&gt;
      &lt;li&gt;ints&lt;/li&gt;
      &lt;li&gt;floats&lt;/li&gt;
      &lt;li&gt;etc.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;references to other types&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;usage-scenarios&quot;&gt;Usage scenarios&lt;/h3&gt;

&lt;p style=&quot;margin-bottom: 0;&quot;&gt;A data schema is used to:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;display a type’s properties in an editor context.&lt;/li&gt;
  &lt;li&gt;store the type on disk.&lt;/li&gt;
  &lt;li&gt;load the type at runtime.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;designing-a-data-schema&quot;&gt;Designing a data schema&lt;/h2&gt;
&lt;p&gt;&lt;img src=&quot;assets/images/posts/tale_of_3_data_schemas/designing_data_schemas.png&quot; alt=&quot;Designing data schemas requires consideration&quot; /&gt;&lt;/p&gt;
&lt;div align=&quot;center&quot;&gt;
&lt;i&gt;&lt;small&gt;a picture of a side from Ludovic Chabant's GDC 2018 presentation&lt;/small&gt;&lt;/i&gt;
&lt;/div&gt;
&lt;p&gt;&lt;br /&gt;
If you design a data schema with a &lt;strong&gt;programmer bias&lt;/strong&gt; you will get a data schema that will be great for loading at runtime.&lt;/p&gt;

&lt;p style=&quot;margin-bottom: 0;&quot;&gt;It will be:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;flat and packed&lt;/li&gt;
  &lt;li&gt;optimized for loading&lt;/li&gt;
  &lt;li&gt;unintelligible for designers and artists&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;If you design a data schema with a &lt;strong&gt;content creator bias&lt;/strong&gt; you will get a data schema that will be great for human understanding and iteration.&lt;/p&gt;

&lt;p style=&quot;margin-bottom: 0;&quot;&gt;It will be:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;easy to use and edit by multiple people&lt;/li&gt;
  &lt;li&gt;not cache friendly&lt;/li&gt;
  &lt;li&gt;not efficiently laid out in memory&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;three-different-data-schemas&quot;&gt;Three different data schemas&lt;/h2&gt;
&lt;p&gt;&lt;img src=&quot;assets/images/posts/tale_of_3_data_schemas/not_just_one_data_schema.png&quot; alt=&quot;Not just one data schema&quot; /&gt;&lt;/p&gt;
&lt;div align=&quot;center&quot;&gt;
&lt;i&gt;&lt;small&gt;a picture of a side from Ludovic Chabant's GDC 2018 presentation&lt;/small&gt;&lt;/i&gt;
&lt;/div&gt;
&lt;p style=&quot;margin-bottom: 1em;&quot;&gt;&lt;/p&gt;

&lt;h3 id=&quot;runtime-data-schema&quot;&gt;Runtime data schema&lt;/h3&gt;
&lt;p style=&quot;margin-bottom: 0;&quot;&gt;&lt;strong&gt;used by&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;the game for loading the data into memory&lt;/li&gt;
  &lt;li&gt;the programmers in the code&lt;/li&gt;
&lt;/ul&gt;

&lt;p style=&quot;margin-bottom: 0;&quot;&gt;&lt;strong&gt;purpose&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;performance&lt;/li&gt;
  &lt;li&gt;patching&lt;/li&gt;
  &lt;li&gt;loading&lt;/li&gt;
  &lt;li&gt;nicely packed in memory&lt;/li&gt;
&lt;/ul&gt;

&lt;p style=&quot;margin-bottom: 0;&quot;&gt;&lt;strong&gt; optimized for&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;reading&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;storage-data-schema&quot;&gt;Storage data schema&lt;/h3&gt;
&lt;p&gt;&lt;em&gt;the tools backend&lt;/em&gt;
&lt;strong&gt;a.k.a disk version&lt;/strong&gt;&lt;/p&gt;

&lt;div style=&quot;background-color:#FFFF94;border-left: 6px solid #ffff48;&quot;&gt;
Tools usually use this to save what the user is working on (the logical peace of data).
Not to be confused with a data format like XML, JSON or YAML.
&lt;/div&gt;
&lt;p style=&quot;margin-bottom: 1em;&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;margin-bottom: 0;&quot;&gt;&lt;strong&gt;used by&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;tools to save users work on some form of persistent storage&lt;/li&gt;
&lt;/ul&gt;

&lt;p style=&quot;margin-bottom: 0;&quot;&gt;&lt;strong&gt;purpose&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;can be versioned and easily merged in revision control&lt;/li&gt;
  &lt;li&gt;can be used by tools for automation&lt;/li&gt;
  &lt;li&gt;supports multi-user editing (splitting into different parts)
    &lt;ul&gt;
      &lt;li&gt;for example, the runtime data schema doesn’t need this&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p style=&quot;margin-bottom: 0;&quot;&gt;&lt;strong&gt; optimized for&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;writing to disk&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;tool-data-schema&quot;&gt;Tool data schema&lt;/h3&gt;
&lt;p&gt;&lt;em&gt;the tools frontend&lt;/em&gt;&lt;/p&gt;

&lt;div style=&quot;background-color:#FFFF94;border-left: 6px solid #ffff48;&quot;&gt;
How the content creators see it in their minds. How the game data is displayed in an editor as a graph, property grid or a gizmo.
You can think of this as a subset of UX. Usually, very Object Oriented.
&lt;/div&gt;
&lt;p style=&quot;margin-bottom: 1em;&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;margin-bottom: 0;&quot;&gt;&lt;strong&gt;used by&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;content creators for content creation&lt;/li&gt;
  &lt;li&gt;engineers for analysis and decision making&lt;/li&gt;
  &lt;li&gt;tools developers for creating a great editing experience&lt;/li&gt;
&lt;/ul&gt;

&lt;p style=&quot;margin-bottom: 0;&quot;&gt;&lt;strong&gt;purpose&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;better understanding by humans&lt;/li&gt;
  &lt;li&gt;better UX&lt;/li&gt;
  &lt;li&gt;workflow and iteration oriented&lt;/li&gt;
&lt;/ul&gt;

&lt;p style=&quot;margin-bottom: 0;&quot;&gt;&lt;strong&gt; optimized for&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;editing&lt;/li&gt;
  &lt;li&gt;iteration&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;frostbite-engine-tails&quot;&gt;Frostbite Engine tails&lt;/h3&gt;

&lt;p&gt;Ludovic brings up 4 tails about how the 3 data schemas are used in the Frostbite Engine.&lt;/p&gt;

&lt;p style=&quot;margin-bottom: 0;&quot;&gt;The main points of the tails:&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;Use a more user-friendly data schema for user editing, but keep an eye out for where you do the conversion from one data schema to another.&lt;/li&gt;
  &lt;li&gt;Use different data schemas to solve different problems, and optimize for different use cases.&lt;/li&gt;
  &lt;li&gt;UX and Data Schemas have a strong relationship. Changing one might affect the other.&lt;/li&gt;
  &lt;li&gt;Use conditional compilation to include tools/storage data schemas in the runtime data schemas. Conditionally include appropriate pipeline code in the runtime to transform data on the fly during live-edit.&lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&quot;the-most-important-data-schema&quot;&gt;The most important Data Schema&lt;/h3&gt;
&lt;p&gt;The &lt;strong&gt;Storage Data Schema&lt;/strong&gt; is the most important Data Schema.
It is only Data Schema that is persistent.&lt;/p&gt;
&lt;div style=&quot;background-color:#FFFF94;border-left: 6px solid #ffff48;&quot;&gt;
it the most expensive to change, because it is persistent
&lt;/div&gt;
&lt;p style=&quot;margin-bottom: 1em;&quot;&gt;&lt;/p&gt;

&lt;h3 id=&quot;designing-data-schemas&quot;&gt;Designing Data Schemas&lt;/h3&gt;
&lt;ol&gt;
  &lt;li&gt;Start with designing the Storage Data Schema&lt;/li&gt;
  &lt;li&gt;Build your Tools around the Storage Data Schema&lt;/li&gt;
  &lt;li&gt;Implement your Runtime Code around the Storage Data Schema
    &lt;ul&gt;
      &lt;li&gt;if it is obvious that the Storage Schema is not performant enough go to the next subsection to find out how to deal with it&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;h4 id=&quot;dealing-with-performance-issues&quot;&gt;Dealing with performance issues&lt;/h4&gt;
&lt;p style=&quot;margin-bottom: 0;&quot;&gt;If the Runtime Data Schema is not performant enough&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;Adjust the Runtime Data Schema and the code&lt;/li&gt;
  &lt;li&gt;Write the pipeline code to convert from the Storage Schema to the Runtime Schema&lt;/li&gt;
&lt;/ol&gt;

&lt;h4 id=&quot;mixing-data-schemas&quot;&gt;Mixing Data Schemas&lt;/h4&gt;
&lt;p&gt;If your engine does not formally support different types of data schemas, use conditional compilation to have ways to remove the Tools/Storage Data Schemas from the production build.&lt;/p&gt;

&lt;h3 id=&quot;what-we-have-learned&quot;&gt;What we have learned&lt;/h3&gt;

&lt;ol&gt;
  &lt;li&gt;There are different ways to organize the same logical data (Tools, Storage, Runtime)&lt;/li&gt;
  &lt;li&gt;Use more user-friendly data organization for the users of your Tools and a more performant way of data organization for your Runtime&lt;/li&gt;
  &lt;li&gt;With this way of organizing data, you can solve different problems without a lot of sacrifices&lt;/li&gt;
  &lt;li&gt;Always remember that a change in a Data Schema can lead to a change in the UX of a tool and vice versa&lt;/li&gt;
  &lt;li&gt;Have a pipeline in place to convert from the Storage Schema to the Runtime Schema&lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&quot;personal-notes&quot;&gt;Personal notes&lt;/h3&gt;
&lt;p&gt;This reminded me of &lt;a href=&quot;https://youtu.be/rX0ItVEVjHc?t=1394&quot;&gt;Mike Acton’s Data-Oriented Design talk&lt;/a&gt; where every problem in programming is a data transformation problem.&lt;/p&gt;

&lt;h2 id=&quot;mindmap--mental-representation&quot;&gt;Mindmap / Mental Representation&lt;/h2&gt;

&lt;iframe src=&quot;https://www.xmind.net/embed/THiC/&quot; width=&quot;750px&quot; height=&quot;450px&quot; frameborder=&quot;0&quot; scrolling=&quot;no&quot; allowfullscreen=&quot;true&quot;&gt;&lt;/iframe&gt;
&lt;p&gt;&lt;a href=&quot;https://www.xmind.net/m/THiC/&quot;&gt;Click to see it in fullscreen&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://www.dropbox.com/s/v9o5opk5llrqmvp/Data%20Schemas.xmind?dl=0&quot;&gt;Link to mindmap source&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You can open the file with &lt;a href=&quot;https://github.com/xmindltd/xmind&quot;&gt;XMind&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;the-toolsmiths&quot;&gt;The Toolsmiths&lt;/h2&gt;
&lt;p&gt;&lt;img src=&quot;http://thetoolsmiths.org/assets/thetoolsmiths_cover_1000x2881.png&quot; alt=&quot;The Toolsmiths logo&quot; /&gt;
&lt;strong&gt;Ludovic Chabant&lt;/strong&gt; is a member of the &lt;a href=&quot;http://thetoolsmiths.org/&quot;&gt;Toolsmiths&lt;/a&gt; community. The Toolsmiths are a community of Game Tool Developers that are passionate about improving the way people make games.&lt;/p&gt;

&lt;p&gt;Join us on &lt;a href=&quot;http://thetoolsmiths.org/join_slack_team&quot;&gt;Slack&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Join us on &lt;a href=&quot;https://twitter.com/thetoolsmiths&quot;&gt;Twitter&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&quot;links&quot;&gt;Links&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.ea.com/frostbite/news/a-tale-of-three-data-schemas&quot;&gt;Slides: A Tale of Three Data Schemas&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.gdcvault.com/play/1025284/Tools-Tutorial-Day-A-Tale&quot;&gt;GDC Vault Video: A Tale of Three Data Schemas&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://twitter.com/ludovicchabant?lang=en&quot;&gt;Ludovic Chabant on Twitter&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><author><name>Victor Stepanov</name></author><category term="GDC" /><category term="Tools_Tutorial_Day" /><category term="data" /><summary type="html">GDC 2018, Tools Tutorial Day, Ludovic Chabant, Senior Software Engineer @ Electronic Arts Vancouver shared the know-how of the Frostbite engine team when it comes to designing the game’s data.</summary></entry><entry><title type="html">The efficiency ratio for game tools improvements</title><link href="/https://victorstepanov.github.io/the-efficiency-ratio-for-game-tools-improvements" rel="alternate" type="text/html" title="The efficiency ratio for game tools improvements" /><published>2018-07-17T18:00:00-07:00</published><updated>2018-07-17T18:00:00-07:00</updated><id>/https://victorstepanov.github.io/the-efficiency-ratio-for-game-tools-improvements</id><content type="html" xml:base="/https://victorstepanov.github.io/the-efficiency-ratio-for-game-tools-improvements">&lt;p&gt;&lt;em&gt;Last Update on July 22nd, 2018&lt;/em&gt;&lt;/p&gt;

&lt;h2 id=&quot;game-tools-as-an-investment&quot;&gt;Game Tools as an investment&lt;/h2&gt;

&lt;p&gt;Having a Game Tools Development Team (GTDT) is an investment and when you are investing you want to get as much Return On Investment (ROI) as you possibly can. This means the GTDT should be working on the “right” issues of the production pipeline. It is not always clear what the “right” issues are.&lt;/p&gt;

&lt;p&gt;The GTDT investment is made by the time resource that the team has. Apart from the time spent on bug fixes the GTDT spends a significant portion of its resource on improving the production pipeline. We need some way to measure the efficiency of the time spent on improving different parts of the pipeline.&lt;/p&gt;

&lt;h2 id=&quot;is-it-worth-the-time&quot;&gt;“Is it worth the time”&lt;/h2&gt;

&lt;p&gt;As a young programmer, I used to have a mindset of “I can write a program for this” at almost any problem that I would encounter. Automating things is great but automating every single task I would encounter would be a waste of time, especially if the task that I wanted to automate would need to be done only once a year or so. A number of years ago I found an excellent resource that could answer the question should I automate this. This resource was an &lt;a href=&quot;https://xkcd.com/1205/&quot;&gt;xkcd “Is it worth the time” comic&lt;/a&gt; [1]. I usually reference it to stop myself from automating everything with Python.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://imgs.xkcd.com/comics/is_it_worth_the_time.png&quot; alt=&quot;Is It Worth the Time?&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;mapping-the-table-to-game-tools-development&quot;&gt;Mapping the table to Game Tools Development&lt;/h2&gt;

&lt;p&gt;When you are in a GTDT most of your work is aimed at improving the workflows of others on the production team. Projecting the table onto the work of a GTDT and you get a table that can be used to calculate the efficiency ratio of the Tool Developers.&lt;/p&gt;

&lt;p&gt;The original table is used for saving the time of the single person that is using the table. When working on an improvement for a tool, the Tool Developer is improving the workflow of multiple people. Meaning that the time saved is multiplied by the number of users that will benefit from the improvement to the tool.&lt;/p&gt;

&lt;p&gt;Here are some examples of how the efficiency table can look like:&lt;/p&gt;
&lt;div style=&quot;background-color:#FFFF94;border-left: 6px solid #ffff48;&quot;&gt;
I'll make some assumptions:
&lt;ul&gt;
  &lt;li&gt;a 3-year game production;  &lt;/li&gt;
  &lt;li&gt;5-day work week; 8-hour work day;  &lt;/li&gt;
  &lt;li&gt;260 work days in a year;  &lt;/li&gt;
  &lt;li&gt;52 work weeks;  &lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;

&lt;h3 id=&quot;how-long-can-you-work-on-an-improvement-of-a-tool-that-will-benefit-2-users&quot;&gt;How long can you work on an improvement of a tool that will benefit 2 users:&lt;/h3&gt;
&lt;p&gt;&lt;img src=&quot;assets/images/roi_for_tool_impruvment_2_users.png&quot; alt=&quot;Table for 2&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;how-long-can-you-work-on-an-improvement-of-a-tool-that-will-benefit-10-users&quot;&gt;How long can you work on an improvement of a tool that will benefit 10 users:&lt;/h3&gt;
&lt;p&gt;&lt;img src=&quot;assets/images/roi_for_tool_impruvment_10_users.png&quot; alt=&quot;Table for 10&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;how-to-use-the-efficiency-table&quot;&gt;How to use the efficiency table&lt;/h2&gt;

&lt;p&gt;The ratio of the time that it will take to implement the improvement, to the time savings can be used to determine how efficient the usage of the GTDT resources will be. The calculated ratio can determine how efficient it would be to implement this improvement to the tool. The smaller the ratio the better.&lt;/p&gt;

&lt;p&gt;Depending on the process used for developing improvements in the tools the ratio can look like this:
&lt;img src=&quot;assets/images/game_tool_efficienct_ratio.png&quot; alt=&quot;the efficiency ratio&quot; /&gt;&lt;/p&gt;

&lt;p&gt;If an improvement will take longer to implement than the total time saved - it doesn’t mean that the improvement isn’t worth implementing. It just means that there might be another improvement that will be more efficient to implement in the current circumstance. This might be due to the fact that there are not enough users that can benefit from the improvement.&lt;/p&gt;

&lt;p&gt;Another thing to consider is the sanity of the user of the tool. &lt;a href=&quot;https://twitter.com/srekel&quot;&gt;Anders Elfgren&lt;/a&gt; brought up this point in one of the many interesting conversations in the &lt;a href=&quot;http://thetoolsmiths.org/join_slack_team&quot;&gt;Toolsmiths Slack&lt;/a&gt;. &lt;img src=&quot;assets/images/sanity.png&quot; alt=&quot;don't forget about the sanity&quot; /&gt; Even if it isn’t efficient to implement the improvement, helping save the user’s mental state is something to keep in mind when deciding what to do.&lt;/p&gt;

&lt;h2 id=&quot;game-tools-ux-angle&quot;&gt;Game Tools UX angle&lt;/h2&gt;

&lt;p&gt;It may seem that saving a second or two is not that much. However, when an operation is performed by many users a hundred times per day the savings can be significant over the lifetime of the production or tool. &lt;a href=&quot;https://twitter.com/RYStorm&quot;&gt;Robin-Yann Storm&lt;/a&gt; touches on this point at his &lt;a href=&quot;https://www.gdcvault.com/play/1025287/Tools-Tutorial-Day-UX-Microtalks&quot;&gt;GDC UX micro talk&lt;/a&gt;[3], where he explores the UX features of an editor Gizmo. The Gizmo is one of the most day-to-day used features of any Level Editor.&lt;/p&gt;

&lt;p&gt;Every second counts when it comes to optimizing commonly used tool functionality. If you don’t believe me, you can use the Human Factors &lt;a href=&quot;http://www.humanfactors.com/coolstuff/roi_increase_productivity.asp&quot;&gt;“Increased productivity ROI calculator”&lt;/a&gt;[2, 4] where you can see how even the smallest savings in time can save a lot of money for the production.&lt;/p&gt;

&lt;p&gt;If you are interested in topics like these, I would recommend reading &lt;a href=&quot;https://www.crcpress.com/Designing-the-User-Experience-of-Game-Development-Tools/Lightbown/p/book/9781482240191&quot;&gt;David Lightbown’s book&lt;/a&gt;[2]. David covers a range of topics about how to improve game development tools from the UX point of view. Here is an example of how focusing on the right users can maximize the improvement while keeping the investment to a minimum.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;assets/images/Fig3_3page_31_Designing_the_User_Experience_of_Game_Development_Tools.png&quot; alt=&quot;Designing the User Experience of Game Development Tools, (p. 31, Figure 3.3), David Lightbown&quot; /&gt;
&lt;em&gt;A figure about maximizing the improvement while keeping the investment to a minimum from the “Designing the User Experience of Game Development Tools” book [2.1]. Used with permission from David Lightbown.&lt;/em&gt;&lt;/p&gt;

&lt;h2 id=&quot;final-thoughts&quot;&gt;Final thoughts&lt;/h2&gt;

&lt;p&gt;Of course, the tool and the improvement in the tool will live longer than the project production time. However, this ratio is more of measuring how efficient are the GTDT resources spent during the production life cycle of a game.&lt;/p&gt;

&lt;p&gt;It is important to note that this table can only be used for a part of the GTDT responsibilities. There are other essential maintenance and validation tasks that can’t be simply measured in terms of how efficient the tools team is used. We will need to think of some other way to measure those Tool Team activities. I’ll write down some thoughts on maintenance and validation improvements in a future post.&lt;/p&gt;

&lt;h2 id=&quot;make-your-own-table&quot;&gt;Make your own table&lt;/h2&gt;
&lt;p&gt;If you want to make your own table for estimating the profits that you can reap from optimizing the development process you can go ahead and punch in your own numbers:&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://www.dropbox.com/s/eg1yy26dmi9b12v/Tool%20Team%20efficiency%20%2810%20Users%29.xlsx?dl=0&quot;&gt;link to spreadsheet&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The primary variables in the spreadsheet are:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;the number of years the project will be worked on&lt;/li&gt;
  &lt;li&gt;the number of users that will reap the benefits from the improvements to the tool&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;assets/images/editing_the_roi_table.png&quot; alt=&quot;Location on the spreadsheet that can be edited&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;update-07222018&quot;&gt;Update 07/22/2018&lt;/h2&gt;
&lt;p&gt;Some insightful comments from the &lt;a href=&quot;http://thetoolsmiths.org/join_slack_team&quot;&gt;Toolsmiths&lt;/a&gt;:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;https://twitter.com/srekel&quot;&gt;Anders Elfgren&lt;/a&gt; writes:
&lt;img src=&quot;assets/images/efficiency_ratio_comment1.png&quot; alt=&quot;Toolsmiths Slack post comment 1&quot; /&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;https://twitter.com/RYStorm&quot;&gt;Robin-Yann Storm&lt;/a&gt; writes:
&lt;img src=&quot;assets/images/efficiency_ratio_comment2.png&quot; alt=&quot;Toolsmiths Slack post comment 2&quot; /&gt;&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;references&quot;&gt;References&lt;/h2&gt;
&lt;ol&gt;
  &lt;li&gt;&lt;a href=&quot;https://xkcd.com/1205/?utm_source=feedly&quot;&gt;Is It Worth the Time?, xkcd, Randall Munroe&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.crcpress.com/Designing-the-User-Experience-of-Game-Development-Tools/Lightbown/p/book/9781482240191&quot;&gt;Designing the User Experience of Game Development Tools, David Lightbown&lt;/a&gt;
2.1 &lt;a href=&quot;https://www.crcpress.com/Designing-the-User-Experience-of-Game-Development-Tools/Lightbown/p/book/9781482240191&quot;&gt;Designing the User Experience of Game Development Tools, (pp. 30-32), David Lightbown&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.gdcvault.com/play/1025287/Tools-Tutorial-Day-UX-Microtalks&quot;&gt;Tools Tutorial Day: UX Microtalks, Part 1, GDC 2018, David Lightbown, Nikoline Høgh, Robin-Yann Storm&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.humanfactors.com/coolstuff/roi_increase_productivity.asp&quot;&gt;Increased productivity ROI calculator, Human Factors International&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;</content><author><name>Victor Stepanov</name></author><summary type="html">Last Update on July 22nd, 2018 Game Tools as an investment Having a Game Tools Development Team (GTDT) is an investment and when you are investing you want to get as much Return On Investment (ROI) as you possibly can. This means the GTDT should be working on the “right” issues of the production pipeline. It is not always clear what the “right” issues are. The GTDT investment is made by the time resource that the team has. Apart from the time spent on bug fixes the GTDT spends a significant portion of its resource on improving the production pipeline. We need some way to measure the efficiency of the time spent on improving different parts of the pipeline. “Is it worth the time” As a young programmer, I used to have a mindset of “I can write a program for this” at almost any problem that I would encounter. Automating things is great but automating every single task I would encounter would be a waste of time, especially if the task that I wanted to automate would need to be done only once a year or so. A number of years ago I found an excellent resource that could answer the question should I automate this. This resource was an xkcd “Is it worth the time” comic [1]. I usually reference it to stop myself from automating everything with Python. Mapping the table to Game Tools Development When you are in a GTDT most of your work is aimed at improving the workflows of others on the production team. Projecting the table onto the work of a GTDT and you get a table that can be used to calculate the efficiency ratio of the Tool Developers. The original table is used for saving the time of the single person that is using the table. When working on an improvement for a tool, the Tool Developer is improving the workflow of multiple people. Meaning that the time saved is multiplied by the number of users that will benefit from the improvement to the tool. Here are some examples of how the efficiency table can look like: I'll make some assumptions: a 3-year game production; 5-day work week; 8-hour work day; 260 work days in a year; 52 work weeks; How long can you work on an improvement of a tool that will benefit 2 users: How long can you work on an improvement of a tool that will benefit 10 users: How to use the efficiency table The ratio of the time that it will take to implement the improvement, to the time savings can be used to determine how efficient the usage of the GTDT resources will be. The calculated ratio can determine how efficient it would be to implement this improvement to the tool. The smaller the ratio the better. Depending on the process used for developing improvements in the tools the ratio can look like this: If an improvement will take longer to implement than the total time saved - it doesn’t mean that the improvement isn’t worth implementing. It just means that there might be another improvement that will be more efficient to implement in the current circumstance. This might be due to the fact that there are not enough users that can benefit from the improvement. Another thing to consider is the sanity of the user of the tool. Anders Elfgren brought up this point in one of the many interesting conversations in the Toolsmiths Slack. Even if it isn’t efficient to implement the improvement, helping save the user’s mental state is something to keep in mind when deciding what to do. Game Tools UX angle It may seem that saving a second or two is not that much. However, when an operation is performed by many users a hundred times per day the savings can be significant over the lifetime of the production or tool. Robin-Yann Storm touches on this point at his GDC UX micro talk[3], where he explores the UX features of an editor Gizmo. The Gizmo is one of the most day-to-day used features of any Level Editor. Every second counts when it comes to optimizing commonly used tool functionality. If you don’t believe me, you can use the Human Factors “Increased productivity ROI calculator”[2, 4] where you can see how even the smallest savings in time can save a lot of money for the production. If you are interested in topics like these, I would recommend reading David Lightbown’s book[2]. David covers a range of topics about how to improve game development tools from the UX point of view. Here is an example of how focusing on the right users can maximize the improvement while keeping the investment to a minimum. A figure about maximizing the improvement while keeping the investment to a minimum from the “Designing the User Experience of Game Development Tools” book [2.1]. Used with permission from David Lightbown. Final thoughts Of course, the tool and the improvement in the tool will live longer than the project production time. However, this ratio is more of measuring how efficient are the GTDT resources spent during the production life cycle of a game. It is important to note that this table can only be used for a part of the GTDT responsibilities. There are other essential maintenance and validation tasks that can’t be simply measured in terms of how efficient the tools team is used. We will need to think of some other way to measure those Tool Team activities. I’ll write down some thoughts on maintenance and validation improvements in a future post. Make your own table If you want to make your own table for estimating the profits that you can reap from optimizing the development process you can go ahead and punch in your own numbers: link to spreadsheet The primary variables in the spreadsheet are: the number of years the project will be worked on the number of users that will reap the benefits from the improvements to the tool Update 07/22/2018 Some insightful comments from the Toolsmiths: Anders Elfgren writes: Robin-Yann Storm writes: References Is It Worth the Time?, xkcd, Randall Munroe Designing the User Experience of Game Development Tools, David Lightbown 2.1 Designing the User Experience of Game Development Tools, (pp. 30-32), David Lightbown Tools Tutorial Day: UX Microtalks, Part 1, GDC 2018, David Lightbown, Nikoline Høgh, Robin-Yann Storm Increased productivity ROI calculator, Human Factors International</summary></entry><entry><title type="html">The Toolsmiths Codex Launch</title><link href="/https://victorstepanov.github.io/toolsmiths-codex-launch" rel="alternate" type="text/html" title="The Toolsmiths Codex Launch" /><published>2018-03-15T18:00:00-07:00</published><updated>2018-03-15T18:00:00-07:00</updated><id>/https://victorstepanov.github.io/toolsmiths-codex-launch</id><content type="html" xml:base="/https://victorstepanov.github.io/toolsmiths-codex-launch">&lt;p&gt;The Toolsmiths Codex is a treasure trove of information regarding Game Tools Development. The Codex will continuously be curated and updated by the Toolsmiths Slack Team.&lt;/p&gt;

&lt;p&gt;Link to blog post on the Toolsmiths website can be found &lt;a href=&quot;http://thetoolsmiths.org/2018/03/16/toolsmiths-codex-launch&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;This codex can be found &lt;a href=&quot;http://thetoolsmiths.org/codex/&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;</content><author><name>Victor Stepanov</name></author><summary type="html">It’s not always easy to find information regarding Game Tools Development on the Internet. There isn't just one place where you can go and find information regarding a particular topic. With the insight and knowledge of The Toolsmiths Community, with developers from around the world, we have made an excellent online resource for Game Tools Developers, and it is called The Toolsmiths Codex.</summary></entry><entry><title type="html">Toolsmiths GDC 2018 Guide</title><link href="/https://victorstepanov.github.io/toolsmiths-gdc-2018-guide" rel="alternate" type="text/html" title="Toolsmiths GDC 2018 Guide" /><published>2018-02-25T02:00:00-08:00</published><updated>2018-02-25T02:00:00-08:00</updated><id>/https://victorstepanov.github.io/toolsmiths-gdc-2018-guide</id><content type="html" xml:base="/https://victorstepanov.github.io/toolsmiths-gdc-2018-guide">&lt;p&gt;I went over many sessions for this year’s GDC and created a list talks that would peek the interest of a Game Tools Developer.&lt;/p&gt;

&lt;p&gt;This guide can be found &lt;a href=&quot;http://thetoolsmiths.org/2018/02/26/gdc-2018-toolsmiths-guide/&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;</content><author><name>Victor Stepanov</name></author><summary type="html">There are around 650+ sessions at this year's GDC, and it isn't easy to find sessions that you as a tools developer might enjoy. I have tried to find and collect most of the talks that a tools developer would be interested in attending or watching after the fact.</summary></entry></feed>